{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\koreatech\\\\webp\\\\webtp\\\\termproject\\\\client\\\\src\\\\pages\\\\Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./Schedule.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst Schedule = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // 초기 이벤트 데이터를 설정합니다.\n    setEvents([{\n      title: \"이벤트 1\",\n      start: new Date(2024, 5, 27, 16, 0),\n      // 2024년 6월 27일 오후 4시\n      end: new Date(2024, 5, 27, 18, 0) // 2024년 6월 27일 오후 6시\n    }, {\n      title: \"이벤트 2\",\n      start: new Date(2024, 5, 28, 8, 0),\n      // 2024년 6월 28일 오전 8시\n      end: new Date(2024, 5, 28, 9, 0) // 2024년 6월 28일 오전 9시\n    }]);\n  }, []);\n  const handleSelectSlot = ({\n    start,\n    end\n  }) => {\n    const title = window.prompt(\"New Event name\");\n    if (title) {\n      setEvents(prev => [...prev, {\n        start,\n        end,\n        title\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 600\n      },\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      views: [\"month\"],\n      defaultView: \"month\",\n      popup: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Schedule;\nexport default Schedule;\n\n/*import React, { useState, useEffect, useRef } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./Schedule.css\";\r\nimport {\r\n  Calendar as WeeklyCalendar,\r\n  momentLocalizer,\r\n} from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Schedule = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newEvent, setNewEvent] = useState({\r\n    title: \"\",\r\n    start: new Date(),\r\n    end: new Date(),\r\n  });\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleEventClick = (event) => {\r\n    const { title, start, end } = event;\r\n    const newTitle = prompt(\"Edit event title\", title);\r\n    if (newTitle) {\r\n      setEvents(\r\n        events.map((evt) => (evt === event ? { ...evt, title: newTitle } : evt))\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAddEvent = (slotInfo) => {\r\n    const title = prompt(\"New Event name\");\r\n    if (title) {\r\n      setEvents([\r\n        ...events,\r\n        { title, start: slotInfo.start, end: slotInfo.end },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClickEvent = (event) => {\r\n    if (window.confirm(`Do you want to delete the event '${event.title}'?`)) {\r\n      setEvents(events.filter((evt) => evt !== event));\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleEventChange = (field, value) => {\r\n    setNewEvent({ ...newEvent, [field]: value });\r\n  };\r\n\r\n  const handleSaveEvent = () => {\r\n    if (isMounted.current) {\r\n      setEvents([\r\n        ...events,\r\n        {\r\n          ...newEvent,\r\n          start: new Date(newEvent.start),\r\n          end: new Date(newEvent.end),\r\n        },\r\n      ]);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h2>Schedule</h2>\r\n      <div className=\"calendar-container\">\r\n        <button className=\"add-reservation-btn\" onClick={openModal}>\r\n          Add Reservation\r\n        </button>\r\n        <Calendar\r\n          className=\"monthly-calendar\"\r\n          onChange={setDate}\r\n          value={date}\r\n          onClickDay={handleDateClick}\r\n        />\r\n        <WeeklyCalendar\r\n          className=\"weekly-calendar\"\r\n          localizer={localizer}\r\n          events={events}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          defaultView=\"week\"\r\n          views={[\"week\"]}\r\n          onSelectSlot={handleAddEvent}\r\n          selectable\r\n          onDoubleClickEvent={handleDoubleClickEvent}\r\n          style={{ height: 500, width: \"100%\" }}\r\n        />\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Add Event</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Event Title\"\r\n              value={newEvent.title}\r\n              onChange={(e) => handleEventChange(\"title\", e.target.value)}\r\n            />\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={moment(newEvent.start).format(\"YYYY-MM-DDTHH:mm\")}\r\n              onChange={(e) => handleEventChange(\"start\", e.target.value)}\r\n            />\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={moment(newEvent.end).format(\"YYYY-MM-DDTHH:mm\")}\r\n              onChange={(e) => handleEventChange(\"end\", e.target.value)}\r\n            />\r\n            <button onClick={handleSaveEvent}>Save</button>\r\n            <button onClick={closeModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","Schedule","_s","events","setEvents","title","start","Date","end","handleSelectSlot","window","prompt","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","style","height","selectable","onSelectSlot","views","defaultView","popup","_c","$RefreshReg$"],"sources":["C:/dev/koreatech/webp/webtp/termproject/client/src/pages/Schedule.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"./Schedule.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Schedule = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 초기 이벤트 데이터를 설정합니다.\r\n    setEvents([\r\n      {\r\n        title: \"이벤트 1\",\r\n        start: new Date(2024, 5, 27, 16, 0), // 2024년 6월 27일 오후 4시\r\n        end: new Date(2024, 5, 27, 18, 0), // 2024년 6월 27일 오후 6시\r\n      },\r\n      {\r\n        title: \"이벤트 2\",\r\n        start: new Date(2024, 5, 28, 8, 0), // 2024년 6월 28일 오전 8시\r\n        end: new Date(2024, 5, 28, 9, 0), // 2024년 6월 28일 오전 9시\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleSelectSlot = ({ start, end }) => {\r\n    const title = window.prompt(\"New Event name\");\r\n    if (title) {\r\n      setEvents((prev) => [...prev, { start, end, title }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h2>Schedule</h2>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 600 }}\r\n        selectable\r\n        onSelectSlot={handleSelectSlot}\r\n        views={[\"month\"]}\r\n        defaultView=\"month\"\r\n        popup\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n\r\n/*import React, { useState, useEffect, useRef } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./Schedule.css\";\r\nimport {\r\n  Calendar as WeeklyCalendar,\r\n  momentLocalizer,\r\n} from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Schedule = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newEvent, setNewEvent] = useState({\r\n    title: \"\",\r\n    start: new Date(),\r\n    end: new Date(),\r\n  });\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleEventClick = (event) => {\r\n    const { title, start, end } = event;\r\n    const newTitle = prompt(\"Edit event title\", title);\r\n    if (newTitle) {\r\n      setEvents(\r\n        events.map((evt) => (evt === event ? { ...evt, title: newTitle } : evt))\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAddEvent = (slotInfo) => {\r\n    const title = prompt(\"New Event name\");\r\n    if (title) {\r\n      setEvents([\r\n        ...events,\r\n        { title, start: slotInfo.start, end: slotInfo.end },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClickEvent = (event) => {\r\n    if (window.confirm(`Do you want to delete the event '${event.title}'?`)) {\r\n      setEvents(events.filter((evt) => evt !== event));\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleEventChange = (field, value) => {\r\n    setNewEvent({ ...newEvent, [field]: value });\r\n  };\r\n\r\n  const handleSaveEvent = () => {\r\n    if (isMounted.current) {\r\n      setEvents([\r\n        ...events,\r\n        {\r\n          ...newEvent,\r\n          start: new Date(newEvent.start),\r\n          end: new Date(newEvent.end),\r\n        },\r\n      ]);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h2>Schedule</h2>\r\n      <div className=\"calendar-container\">\r\n        <button className=\"add-reservation-btn\" onClick={openModal}>\r\n          Add Reservation\r\n        </button>\r\n        <Calendar\r\n          className=\"monthly-calendar\"\r\n          onChange={setDate}\r\n          value={date}\r\n          onClickDay={handleDateClick}\r\n        />\r\n        <WeeklyCalendar\r\n          className=\"weekly-calendar\"\r\n          localizer={localizer}\r\n          events={events}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          defaultView=\"week\"\r\n          views={[\"week\"]}\r\n          onSelectSlot={handleAddEvent}\r\n          selectable\r\n          onDoubleClickEvent={handleDoubleClickEvent}\r\n          style={{ height: 500, width: \"100%\" }}\r\n        />\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Add Event</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Event Title\"\r\n              value={newEvent.title}\r\n              onChange={(e) => handleEventChange(\"title\", e.target.value)}\r\n            />\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={moment(newEvent.start).format(\"YYYY-MM-DDTHH:mm\")}\r\n              onChange={(e) => handleEventChange(\"start\", e.target.value)}\r\n            />\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={moment(newEvent.end).format(\"YYYY-MM-DDTHH:mm\")}\r\n              onChange={(e) => handleEventChange(\"end\", e.target.value)}\r\n            />\r\n            <button onClick={handleSaveEvent}>Save</button>\r\n            <button onClick={closeModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAU,SAAS,CAAC,CACR;MACEC,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAAE;MACrCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAE;IACrC,CAAC,EACD;MACEF,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACpCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;IACpC,CAAC,CACF,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAGA,CAAC;IAAEH,KAAK;IAAEE;EAAI,CAAC,KAAK;IAC3C,MAAMH,KAAK,GAAGK,MAAM,CAACC,MAAM,CAAC,gBAAgB,CAAC;IAC7C,IAAIN,KAAK,EAAE;MACTD,SAAS,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEN,KAAK;QAAEE,GAAG;QAAEH;MAAM,CAAC,CAAC,CAAC;IACvD;EACF,CAAC;EAED,oBACEN,OAAA;IAAKc,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrBG,MAAM,EAAEA,MAAO;MACfgB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAE;MACvBC,UAAU;MACVC,YAAY,EAAEf,gBAAiB;MAC/BgB,KAAK,EAAE,CAAC,OAAO,CAAE;MACjBC,WAAW,EAAC,OAAO;MACnBC,KAAK;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3CID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA6Cd,eAAeA,QAAQ;;AAEvlJA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}