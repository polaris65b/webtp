{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\koreatech\\\\webp\\\\webtp\\\\termproject\\\\client\\\\src\\\\pages\\\\Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { format } from \"date-fns\";\nimport Modal from \"react-modal\";\nimport \"./Schedule.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst Schedule = ({\n  isLoggedIn\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    date: new Date()\n  });\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\n  const openModal = () => {\n    if (isLoggedIn) {\n      setModalIsOpen(true);\n    } else {\n      setShowLoginAlert(true);\n      setTimeout(() => setShowLoginAlert(false), 2000); // 2초 후 메시지 숨기기\n    }\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setNewEvent({\n      title: \"\",\n      date: new Date()\n    });\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleEventChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEvent({\n      ...newEvent,\n      [name]: value\n    });\n  };\n  const handleAddEvent = () => {\n    setEvents([...events, newEvent]);\n    closeModal();\n  };\n  const handleDoubleClick = event => {\n    const eventToEdit = events.find(e => e === event);\n    setNewEvent(eventToEdit);\n    setModalIsOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [showLoginAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-alert\",\n      children: \"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-reservation-button\",\n      onClick: openModal,\n      children: \"Add Reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateChange,\n      onDoubleClickDay: handleDoubleClick,\n      value: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Event Title\",\n          value: newEvent.title,\n          onChange: handleEventChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"date\",\n          value: format(new Date(newEvent.date), \"yyyy-MM-dd'T'HH:mm\"),\n          onChange: handleEventChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddEvent,\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: format(new Date(event.date), \"yyyy-MM-dd HH:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"JwB4agkCR8jLAYAJcJ/4wFPJA3g=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","Calendar","format","Modal","jsxDEV","_jsxDEV","setAppElement","Schedule","isLoggedIn","_s","events","setEvents","selectedDate","setSelectedDate","Date","modalIsOpen","setModalIsOpen","newEvent","setNewEvent","title","date","showLoginAlert","setShowLoginAlert","openModal","setTimeout","closeModal","handleDateChange","handleEventChange","e","name","value","target","handleAddEvent","handleDoubleClick","event","eventToEdit","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClickDay","onDoubleClickDay","isOpen","onRequestClose","overlayClassName","type","placeholder","onChange","map","index","_c","$RefreshReg$"],"sources":["C:/dev/koreatech/webp/webtp/termproject/client/src/pages/Schedule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { format } from \"date-fns\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Schedule.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Schedule = ({ isLoggedIn }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [newEvent, setNewEvent] = useState({ title: \"\", date: new Date() });\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\r\n\r\n  const openModal = () => {\r\n    if (isLoggedIn) {\r\n      setModalIsOpen(true);\r\n    } else {\r\n      setShowLoginAlert(true);\r\n      setTimeout(() => setShowLoginAlert(false), 2000); // 2초 후 메시지 숨기기\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setNewEvent({ title: \"\", date: new Date() });\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleEventChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewEvent({ ...newEvent, [name]: value });\r\n  };\r\n\r\n  const handleAddEvent = () => {\r\n    setEvents([...events, newEvent]);\r\n    closeModal();\r\n  };\r\n\r\n  const handleDoubleClick = (event) => {\r\n    const eventToEdit = events.find((e) => e === event);\r\n    setNewEvent(eventToEdit);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      {showLoginAlert && <div className=\"login-alert\">로그인이 필요합니다</div>}\r\n      <h1>Schedule</h1>\r\n      <button className=\"add-reservation-button\" onClick={openModal}>\r\n        Add Reservation\r\n      </button>\r\n      <Calendar\r\n        onClickDay={handleDateChange}\r\n        onDoubleClickDay={handleDoubleClick}\r\n        value={selectedDate}\r\n      />\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Add New Event</h2>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Event Title\"\r\n            value={newEvent.title}\r\n            onChange={handleEventChange}\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            name=\"date\"\r\n            value={format(new Date(newEvent.date), \"yyyy-MM-dd'T'HH:mm\")}\r\n            onChange={handleEventChange}\r\n          />\r\n          <button type=\"button\" onClick={handleAddEvent}>\r\n            Add Event\r\n          </button>\r\n          <button type=\"button\" onClick={closeModal}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n      <div className=\"events\">\r\n        {events.map((event, index) => (\r\n          <div key={index} className=\"event\">\r\n            <h3>{event.title}</h3>\r\n            <p>{format(new Date(event.date), \"yyyy-MM-dd HH:mm\")}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}